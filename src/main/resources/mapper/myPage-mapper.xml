<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="myPageMapper">
	
	<!-- @@@@ 마이 그룹 관련 시작 @@@@ -->
	<select id="getMemberMyGroupCount" parameterType="hashMap" resultType="_int">
		select count(*)
		from ap_sgroup a
			left join sgroup g using(sg_no)
		    join member m on(g.id = m.id)
		<choose>
			<when test="triger == 'false'">
				where a.id=#{userId}
				<if test="type != ''">
					<if test="type == 'title'">
						and (sg_name like '%'||#{text}||'%')
					</if>
					<if test="type == 'bossNick'">
						and (nick like '%'||#{text}||'%')
					</if>
				</if>
				<if test="category == 'long'">
					and (sg_status='Y' or sg_status='D')
				</if>
				<if test="category == 'once'">
					and (sg_status='N' or sg_status='E')
				</if>
			</when>
			<when test="triger == 'true'">
				where a.id=#{userId} and asg_status='Y'
				<if test="type != ''">
					<if test="type == 'title'">
						and (sg_name like '%'||#{text}||'%')
					</if>
					<if test="type == 'bossNick'">
						and (nick like '%'||#{text}||'%')
					</if>
				</if>
				<if test="category == 'long'">
					and (sg_status='Y' or sg_status='D')
				</if>
				<if test="category == 'once'">
					and (sg_status='N' or sg_status='E')
				</if>
			</when>
		</choose>
	</select>
	
	<select id="getBossMyGroupCount" parameterType="hashMap" resultType="_int">
		select count(*)
		from sgroup
		    join member using(id)
		<choose>
			<when test="triger == 'false'">
				where id=#{userId}
				<if test="type != ''">
					<if test="type == 'title'">
						and (sg_name like '%'||#{text}||'%')
					</if>
					<if test="type == 'bossNick'">
						and (nick like '%'||#{text}||'%')
					</if>
				</if>
				<if test="category == 'long'">
					and (sg_status='Y' or sg_status='D')
				</if>
				<if test="category == 'once'">
					and (sg_status='N' or sg_status='E')
				</if>
			</when>
			<when test="triger == 'true'">
				where id=#{userId} <!-- and (sg_status='Y' or sg_status='N') -->
				<if test="type != ''">
					<if test="type == 'title'">
						and (sg_name like '%'||#{text}||'%')
					</if>
					<if test="type == 'bossNick'">
						and (nick like '%'||#{text}||'%')
					</if>
				</if>
				<if test="category == 'long'">
					and sg_status='Y'
				</if>
				<if test="category == 'once'">
					and sg_status='N'
				</if>
				<if test="category != 'once' and category != 'long'">
					and (sg_status='Y' or sg_status='N')
				</if>
			</when>
		</choose>
	</select>
	
	<select id="getGroupList" parameterType="hashMap" resultMap="ApproachGroupResultSet">
		select distinct nvl(a.sg_no,g.sg_no) as sg_no, sg_name, sg_status, study_name, g.id, nick,
		      (case when a.id = #{userId} then to_date(substr(asg_date,0,10),'YYYY.MM.DD')
		            when g.id = #{userId} then SG_INSERT_DATE end) as sort_date, asg_status
		from ap_sgroup a
		    right join sgroup g on(a.sg_no = g.sg_no)
		    join study_category s on(g.study_no = s.study_no)
		    join member m on(g.id = m.id)
		<choose>
			<when test="triger == 'false'">
				WHERE (a.id = #{userId} or id = #{userId})
				<if test="type != ''">
					<if test="type == 'title'">
						and (sg_name like '%'||#{text}||'%')
					</if>
					<if test="type == 'bossNick'">
						and (nick like '%'||#{text}||'%')
					</if>
				</if>
				<if test="category == 'long'">
					and (sg_status='Y' or sg_status='D')
				</if>
				<if test="category == 'once'">
					and (sg_status='N' or sg_status='E')
				</if>
			</when>
			<when test="triger == 'true'">
				WHERE (a.id = #{userId} and asg_status='Y'
					<if test="type != ''">
						<if test="type == 'title'">
							and (sg_name like '%'||#{text}||'%')
						</if>
						<if test="type == 'bossNick'">
							and (nick like '%'||#{text}||'%')
						</if>
					</if>
					  	<if test="category == 'long'">
							and sg_status='Y'
						</if>
						<if test="category == 'once'">
							and sg_status='N'
						</if>
						<if test="category != 'once' and category != 'long'">
							and (sg_status='Y' or sg_status='N')
						</if>)
					  or (id = #{userId}
					<if test="type != ''">
						<if test="type == 'title'">
							and (sg_name like '%'||#{text}||'%')
						</if>
						<if test="type == 'bossNick'">
							and (nick like '%'||#{text}||'%')
						</if>
					</if>
					  	<if test="category == 'long'">
							and sg_status='Y'
						</if>
						<if test="category == 'once'">
							and sg_status='N'
						</if>
						<if test="category != 'once' and category != 'long'">
							and (sg_status='Y' or sg_status='N')
						</if>)
			</when>
		</choose>
		order by sort_date desc
	</select>
	
	<select id="getMemberList" parameterType="_int" resultMap="ApproachGroupResultSet">
		select id, nick, asg_dl_date
		from ap_sgroup
			join member using(id)
		where sg_no = #{sgno} and asg_status='Y'
		order by asg_dl_date desc
	</select>
	
	<select id="getRecList" parameterType="_int" resultMap="ApproachGroupResultSet">
		SELECT RSG_NO, RSG_INSERT_DATE, RSG_TERM, RSG_NUM
		FROM REC_SGROUP
		WHERE SG_NO = #{SGNO}
	</select>
	
	<resultMap type="MyStudyGroup" id="ApproachGroupResultSet">
		<id property="no" column="rnum"/>
		<result property="sgNo" column="sg_no"/>
		<result property="sgName" column="sg_name"/>
		<result property="studyName" column="study_name"/>
		<result property="sgStatus" column="sg_status"/>
		<result property="userId" column="userId"/>
		<result property="id" column="id"/>
		<result property="nick" column="nick"/>
		<result property="sortDate" column="sort_date"/>
		<result property="appStatus" column="asg_status"/>
		<result property="appDlDate" column="asg_dl_date"/>
		<result property="recNo" column="RSG_NO"/>
		<result property="recEnrollDate" column="RSG_INSERT_DATE"/>
		<result property="recTerm" column="RSG_TERM"/>
		<result property="recNum" column="RSG_NUM"/>
	</resultMap>
	
	<update id="deleteMember" parameterType="hashMap">
		update ap_sgroup
		set asg_status = 'O'
		where sg_no = #{sgno} and id = #{id}
	</update>
	
	<update id="closeRecruit" parameterType="_int">
		update rec_sgroup
		set rsg_term = substr(rsg_term, 0, 10) || ' - ' || to_char(sysdate-1,'yyyy-mm-dd')
		where rsg_no = #{recno}
	</update>
	<!-- @@@@ 마이 그룹 관련 끝 @@@@ -->
	
	<!-- @@@@ 쿠폰 관련 시작 @@@@ -->
	<select id="couponListCount" parameterType="string" resultType="_int">
		select count(*)
		from coupon
		where id=#{id}
	</select>
	
	<select id="couponList" parameterType="string" resultMap="CouponResultSet">
		select *
		from coupon
		where id=#{id}
		order by c_no desc
	</select>
	
	<resultMap id="CouponResultSet" type="Coupon">
		<id property="cNo" column="C_NO"/>
		<result property="cInsertDate" column="C_INSERT_DATE"/>
		<result property="cStamp" column="C_STAMP"/>
		<result property="cTotalStamp" column="C_TOTAL_STAMP"/>
		<result property="cContent" column="C_CONTENT"/>
		<result property="id" column="ID"/>
		<result property="reserNo" column="RESER_NO"/>
	</resultMap>
	<!-- @@@@ 쿠폰 관련 끝 @@@@ -->
  
	<!-- loginUser의 공부 중인 항목 -->
	<select id="getStudyList" parameterType="Preview" resultMap="previewResultSet">
		select id, study_no, study_name, sp_term, study_etc
		from preview
    		join member using(id)
    		join study_category using(study_no)
		where id = #{loginUserId}
	</select>
	<resultMap type="Preview" id="previewResultSet">
		<id property="id" column="ID"/>
		<result property="studyNo" column="STUDY_NO"/>
		<result property="spTerm" column="SP_TERM"/>
		<result property="studyEtc" column="STUDY_ETC"/>
		<result property="studyName" column="STUDY_NAME"/>
	</resultMap>
	
	<!-- 비밀번호 변경 -->
	<update id="updatePwd" parameterType="Member">
		update member
		set pwd=#{pwd}
		where id=#{id}
	</update>
	
	<!-- 공부카테고리 -->
	<select id="selectList" parameterType="StudyCategory" resultMap="studyCategoryResultSet"> 
		select study_no, study_name
		from study_category 
	</select>
	<resultMap type="StudyCategory" id="studyCategoryResultSet">
		<id property="studyNo" column="STUDY_NO"/>
		<result property="studyName" column="STUDY_NAME"/>
	</resultMap>
	
	<update id="updateMember" parameterType="Member">
		update member 
		set name=#{name}, nick=#{nick}, birth=#{birth}, email=#{email}, phone=#{phone}, gender=#{gender} 
		where id=${id}
	</update>
	
	<update id="updatePreview" parameterType="Preview">
		update preview
		set styudyNo=#{studyNo}, spTerm=#{spTerm}, studyName=#{studyName}, studyEtc=#{studyEtc}
		where id=${id} 
	</update>
  
</mapper>