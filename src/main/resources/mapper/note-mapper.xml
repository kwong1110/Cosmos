<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="noteMapper">

	<select id="getListCount" resultType="_int">
		select count(*)
		from note
		where note_fromstatus = 'Y' and note_tostatus = 'Y' and (note_fromid = #{userId} or note_toid = #{userId}) and note_storage = 'N'
	</select>
	
	<select id="selectList" resultMap="noteResultSet" >
		select *
		from note
		where note_fromstatus = 'Y' and note_tostatus = 'Y' and (note_fromid = #{userId} or note_toid = #{userId}) and note_storage = 'N'
		order by note_no desc 
	</select>
	<resultMap id="noteResultSet" type="Note">
		<id property="noteNo" column="NOTE_NO"/>
		<result property="noteFromId" column="NOTE_FROMID"/>
		<result property="noteToId" column="NOTE_TOID"/>
		<result property="noteContent" column="NOTE_CONTENT"/>
		<result property="noteTime" column="NOTE_TIME"/>
		<result property="noteFromStatus" column="NOTE_FROMSTATUS"/>
		<result property="noteAlarm" column="NOTE_ALARM"/>
		<result property="noteStorage" column="NOTE_STORAGE"/>
		<result property="noteToStatus" column="NOTE_TOSTATUS"/>
	</resultMap>
	
	<!-- 쪽지 보내기 -->
	<insert id="insertNote" parameterType="Note">
		insert into note
		values(seq_noteNo.nextval, #{noteFromId}, #{noteToId}, #{noteContent}, sysdate, default, default, default, default)
	</insert>
	
	<!-- 쪽지 보기 -->
	<select id="selectNote" parameterType="_int" resultMap="noteResultSet">
		select *
		from note
		where note_no = #{noteNo} and note_fromstatus = 'Y' and note_tostatus = 'Y'
	</select>
	
	<!-- 쪽지 삭제 -->
	<update id="deleteNote" parameterType="_int">
		update note
		set note_tostatus = 'N'
		where note_no = #{noteNo}
	</update>
	
	<!-- 쪽지 보관함으로 이동 -->
	<update id="storeNote" parameterType="_int">
		update note
		set note_storage = 'Y'
		where note_no = #{noteNo}
	</update>
	
	<!-- 쪽지 보관함 목록 갯수 -->
	<select id="getStoreListCount" resultType="_int">
		select count(*)
		from note
		where (note_fromstatus = 'Y' or note_tostatus = 'Y') and (note_fromid = #{userId} or note_toid = #{userId}) and note_storage = 'Y'
	</select>
	
	<!-- 쪽지 보관함 목록 -->
	<select id="selectStoreList" resultMap = "noteResultSet">
		select *
		from note
		where (note_fromstatus = 'Y' or note_tostatus = 'Y') and (note_fromid = #{userId} or note_toid = #{userId}) and note_storage = 'Y'
		order by note_no desc
		
	</select>
</mapper>
