<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="noteMapper">

	<!-- 쪽지 목록 수 -->
	<select id="getListCount" resultType="_int">
		select count(*)
		from note
		join member on(id = note_fromid)
		where (note_fromid = #{userId} or note_toid = #{userId}) and note_fromstatus = 'Y' and note_tostatus = 'Y' and note_storage = 'N'
	</select>
	
	<!-- 쪽지 목록 -->
	<select id="selectList" resultMap="noteResultSet">
		select *
		from note
		join member on(id = note_fromid)
		where (note_fromid = #{userId} or note_toid = #{userId}) and note_fromstatus = 'Y' and note_tostatus = 'Y' and note_storage = 'N'
		order by note_no desc 
	</select>
	<resultMap id="noteResultSet" type="Note">
		<id property="noteNo" column="NOTE_NO"/>
		<result property="noteFromId" column="NOTE_FROMID"/>
		<result property="noteToId" column="NOTE_TOID"/>
		<result property="noteContent" column="NOTE_CONTENT"/>
		<result property="noteTime" column="NOTE_TIME"/>
		<result property="noteFromStatus" column="NOTE_FROMSTATUS"/>
		<result property="noteAlarm" column="NOTE_ALARM"/>
		<result property="noteStorage" column="NOTE_STORAGE"/>
		<result property="noteToStatus" column="NOTE_TOSTATUS"/>
		<result property="nick" column="NICK"/>
	</resultMap>
	
	<!-- 쪽지 보내기 -->
	<select id="selectMatchId" resultMap="memberResultSet">
		select id 
		from member where nick=#{toNick}
	</select>
	<resultMap type="Member" id="memberResultSet">
		<id property="id" column="ID"/>
		<result property="pwd" column="PWD"/>	
		<result property="name" column="NAME"/>	
		<result property="nick" column="NICK"/>	
		<result property="birth" column="BIRTH"/>	
		<result property="email" column="EMAIL"/>	
		<result property="phone" column="PHONE"/>	
		<result property="enroll" column="ENROLL"/>	
		<result property="certifyNum" column="CERTIFY_NUM"/>	
		<result property="certifyStatus" column="CERTIFY_STATUS"/>	
		<result property="mstatus" column="MSTATUS"/>
		<result property="grade" column="GRADE"/>
		<result property="gender" column="GENDER"/>	
	</resultMap>
	
	<insert id="insertNote" parameterType="Note">
		insert into note
		values(seq_noteNo.nextval, #{noteFromId}, #{noteToId}, #{noteContent}, sysdate, default, default, default, default)
	</insert>
	
	<!-- 쪽지 보기 -->
	<select id="selectNote" parameterType="_int" resultMap="noteResultSet">
		select *
		from note
		join member on(id = note_fromid)
		where note_no = #{noteNo}
	</select>
	
	<!-- 쪽지 삭제 -->
	<update id="deleteNote" parameterType="_int">
		update note
		set note_tostatus = 'N'
		where note_no = #{noteNo}
	</update>
	
	<!-- 쪽지 보관함으로 이동 -->
	<update id="storeNote" parameterType="_int">
		update note
		set note_storage = 'Y'
		where note_no = #{noteNo}
	</update>
	
	<!-- 쪽지 보관함 목록 갯수 -->
	<select id="getStoreListCount" resultType="_int">
		select count(*)
		from note
		join member on(id = note_fromid)
		where (note_fromid = #{userId} or note_toid = #{userId}) and note_fromstatus = 'Y' and note_tostatus = 'Y' and note_storage = 'Y'
		order by note_no desc
	</select>
	
	<!-- 쪽지 보관함 목록 -->
	<select id="selectStoreList" resultMap = "noteResultSet">
		select *
		from note
		join member on(id = note_fromid)
		where (note_fromid = #{userId} or note_toid = #{userId}) and note_fromstatus = 'Y' and note_tostatus = 'Y' and note_storage = 'Y'
		order by note_no desc
	</select>
	
	<!-- 검색 결과 목록 수 -->	
	<select id="getSearchResultCount" resultType="_int">
		select count(*)
		from note
		
		<if test="id != null">
			join member on(id = note_fromid)
			where note_fromstatus = 'Y' and note_tostatus = 'Y' and note_storage = 'N'
			and (note_fromid = #{id} and note_toid = 'user02') or (note_fromid = 'user02' and note_toid = #{id})
		</if>
		<if test="nick != null">
			join member on(id = note_fromid or id = note_toid)
			where (note_fromid = 'user02' or note_toid = 'user02') and note_fromstatus = 'Y' and note_tostatus = 'Y' and note_storage = 'N'
			and nick = #{nick}
		</if>
		<if test="content != null">
			join member on(id = note_fromid)
			where (note_fromid = 'user02' or note_toid = 'user02') and note_fromstatus = 'Y' and note_tostatus = 'Y' and note_storage = 'N'
			and note_content like '%' || #{content} || '%'
		</if>
	</select>
	
	<!-- 검색 결과 목록 -->
	<select id="selectSearchResultList" resultMap="noteResultSet">
		select *
		from note
		<choose>
			<when test="id != null">
				join member on(id = note_fromid)
				where note_fromstatus = 'Y' and note_tostatus = 'Y' and note_storage = 'N'
				and (note_fromid = #{id} and note_toid = 'user02') or (note_fromid = 'user02' and note_toid = #{id})
			</when>
			<when test="nick != null">
				join member on(id = note_fromid or id = note_toid)
				where (note_fromid = 'user02' or note_toid = 'user02') and note_fromstatus = 'Y' and note_tostatus = 'Y' and note_storage = 'N'
				and nick = #{nick}
			</when>
			<otherwise>
				join member on(id = note_fromid)
				where (note_fromid = 'user02' or note_toid = 'user02') and note_fromstatus = 'Y' and note_tostatus = 'Y' and note_storage = 'N'
				and note_content like '%' || #{content} || '%'
			</otherwise>
		</choose>
	</select>
	
	<select id="getMenuToListCount" resultType="_int">
		select count(*)
		from note
		join member on(id = note_fromid)
		where note_toid = #{userId} and note_tostatus = 'Y' and note_storage = 'N'
	</select>
	<select id="selectMenuToList" resultMap="noteResultSet">
		select *
		from note
		join member on(id = note_fromid)
		where note_toid = #{userId} and note_tostatus = 'Y' and note_storage = 'N'
	</select>
	
	<select id="getMenuFromListCount" resultType="_int">
		select count(*)
		from note
		join member on(id = note_fromid)
		where note_fromid = #{userId} and note_fromstatus = 'Y' and note_storage = 'N'
	</select>
	<select id="selectMenuFromList" resultMap="noteResultSet">
		select *
		from note
		join member on(id = note_fromid)
		where note_fromid = #{userId} and note_fromstatus = 'Y' and note_storage = 'N'
	</select>
	
	<select id="getMenuToMeListCount" resultType="_int">
		select count(*)
		from note
		join member on(id = note_fromid)
		where note_fromid = #{userId} and note_toid = #{userId} and note_fromstatus = 'Y' and note_tostatus = 'Y' and note_storage = 'N'
	</select>
	<select id="selectMenuToMeList" resultMap="noteResultSet">
		select *
		from note
		join member on(id = note_fromid)
		where note_fromid = #{userId} and note_toid = #{userId} and note_fromstatus = 'Y' and note_tostatus = 'Y' and note_storage = 'N'
	</select>
</mapper>
