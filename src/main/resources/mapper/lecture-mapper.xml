<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lectureMapper">
	<select id="getLectureList" resultMap="lectureResultSet">
		select LECTURE_NO, LECTURE_RECORD, LECTURE_TITLE, LECTURE_CONTENT, LECTURE_FEE, MAXPEOPLE, 
       		   ATTENDPEOPLE, LECTURE_DATE, LECTURE_STATUS, ID, BRANCH_NO, LECTURE_JOB,
       		   LECTURE_END, LECTURE_START, NAME, BRANCH_NAME
		from lecture
    		join member using(id)
    		join branch using(branch_no)
		where lecture_status='OPEN'
		order by lecture_date desc
	</select>
	
	<resultMap id="lectureResultSet" type="Lecture">
		<id property="lectureNo" column="LECTURE_NO"/>
		<result property="lectureRecord" column="LECTURE_RECORD"/>
		<result property="lectureTitle" column="LECTURE_TITLE"/>
		<result property="lectureContent" column="LECTURE_CONTENT"/>
		<result property="lectureFee" column="LECTURE_FEE"/>
		<result property="maxpeople" column="MAXPEOPLE"/>
		<result property="attendpeople" column="ATTENDPEOPLE"/>
		<result property="lectureDate" column="LECTURE_DATE"/>
		<result property="lectureStatus" column="LECTURE_STATUS"/>
		<result property="id" column="ID"/>
		<result property="branchNo" column="BRANCH_NO"/>
		<result property="lectureJob" column="LECTURE_JOB"/>
		<result property="lectureEnd" column="LECTURE_END"/>
		<result property="lectureStart" column="LECTURE_START"/>
		<result property="branchName" column="BRANCH_NAME"/>
	</resultMap>
	
	<insert id="lectureApply" parameterType="Lecture">
		insert into lecture
		values(seq_lid.nextval, #{lectureRecord}, #{lectureTitle}, #{lectureContent}, #{lectureFee}, #{maxpeople},
		       0, sysdate, default, #{id}, #{branchNo}, #{lectureJob}, #{lectureEnd}, #{lectureStart}) 
	</insert>
	
	<select id="getLectureManageList" resultMap="lectureResultSet">
		select LECTURE_NO, LECTURE_RECORD, LECTURE_TITLE, LECTURE_CONTENT, LECTURE_FEE, MAXPEOPLE, 
       		   ATTENDPEOPLE, LECTURE_DATE, LECTURE_STATUS, ID, BRANCH_NO, LECTURE_JOB,
       		   LECTURE_END, LECTURE_START, NAME, BRANCH_NAME
		from lecture
    		join member using(id)
    		join branch using(branch_no)
    	where lecture_status != 'DELETE'
		order by lecture_date desc
	</select>
	
	<select id="getListCount" resultType="_int">
		select count(*)
		from lecture
		where lecture_status != 'DELETE'
	</select>
	
	<select id="selectLecture" parameterType="_int" resultMap="lectureResultSet">
		select LECTURE_NO, LECTURE_RECORD, LECTURE_TITLE, LECTURE_CONTENT, LECTURE_FEE, MAXPEOPLE, 
       		   ATTENDPEOPLE, LECTURE_DATE, LECTURE_STATUS, ID, BRANCH_NO, LECTURE_JOB,
       		   LECTURE_END, LECTURE_START, NAME, BRANCH_NAME
		from lecture
    		join member using(id)
    		join branch using(branch_no)
    	where LECTURE_NO=#{ lNo }
	</select>
	
	<update id="updateLecture">
		update lecture
		set lecture_status=#{lectureStatus}
		where lecture_no=#{lectureNo}
	</update>
	
	<select id="getMyLectureList" resultMap="lectureResultSet">
		select LECTURE_NO, LECTURE_RECORD, LECTURE_TITLE, LECTURE_CONTENT, LECTURE_FEE, MAXPEOPLE, 
       		   ATTENDPEOPLE, LECTURE_DATE, LECTURE_STATUS, ID, BRANCH_NO, LECTURE_JOB,
       		   LECTURE_END, LECTURE_START, NAME, BRANCH_NAME
		from lecture
    		join member using(id)
    		join branch using(branch_no)
		where id=#{loginUserId} and lecture_status != 'DELETE'
		order by lecture_date desc
	</select>
	
	<select id="getMyListCount" resultType="_int">
		select count(*)
		from lecture
		where id=#{ loginUserId } and lecture_status != 'DELETE'
	</select>
	
	<insert id="lectureBuy" parameterType="Lecture">
		insert into lecture_people
		values(#{ lectureNo }, #{ id }, 'C', sysdate)
	</insert>
	
	<update id="lectureAttendPlus" parameterType="Lecture">
		update lecture
		set attendpeople=attendpeople+1
		where lecture_no=#{lectureNo}
	</update>
	
	<select id="selectLectureAttendList" resultMap="lectureResultSet">
		select *
		from lecture_people
		where lecture_status='Y' and id=#{ loginUserId }
	</select>
	
	<!-- myPage 결제내역 관련 -->
	<resultMap id="mySeatResultSet" type="Seat">
		<id property="reserNo" column="RESER_NO"/>
		<result property="reserPeople" column="RESER_PEOPLE"/>
		<result property="reserDay" column="RESER_DAY"/>
		<result property="startTime" column="START_TIME"/>
		<result property="endTime" column="END_TIME"/>
		<result property="reserYn" column="RESER_YN"/>
		<result property="seatNo" column="SEAT_NO"/>
		<result property="id" column="ID"/>
		<result property="branchNo" column="BRANCH_NO"/>
		<result property="branchName" column="BRANCH_NAME"/>
		<result property="reserSort" column="RESER_SORT"/>
		<result property="finishDay" column="FINISH_DAY"/>
		<result property="reserType" column="RESER_TYPE"/>
		<result property="totalFee" column="TOTAL_FEE"/>
	</resultMap>
	
	<select id="mySeatHistory" parameterType="String" resultMap="mySeatResultSet">
		select *
		from reser
			join branch using(branch_no)
		where id=#{ loginUserId }
		order by reser_day desc
	</select>
	
	<select id="myLectureHistory" parameterType="String" resultMap="lectureResultSet">
		select lecture_no, lecture_start, lecture_end, branch_name, lecture_title, lp.lecture_status
		from lecture l
		    join branch using(branch_no)
		    join lecture_people lp using(lecture_no) 
		where l.id=#{ loginUserId }
		order by attend_date desc
	</select>
	
	<!-- myPage 결제내역 관련 끝 -->
</mapper>
